// <auto-generated />
using System;
using BootstrapAdmin.DataAccess.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BootstrapAdmin.DataAccess.EFCore.Migrations
{
    [DbContext(typeof(BootstrapAdminContext))]
    [Migration("20220123055646_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.EFGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.EFNavigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Application")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsResource")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Navigations", (string)null);
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.EFRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.EFUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("App")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Css")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.NavigationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("NavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NavigationId");

                    b.HasIndex("RoleId");

                    b.ToTable("NavigationRole");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.RoleGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleGroup");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.UserGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.Models.Dict", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Define")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dicts");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.NavigationRole", b =>
                {
                    b.HasOne("BootstrapAdmin.DataAccess.EFCore.Models.EFNavigation", "Navigation")
                        .WithMany("NavigationRoles")
                        .HasForeignKey("NavigationId");

                    b.HasOne("BootstrapAdmin.DataAccess.EFCore.Models.EFRole", "Role")
                        .WithMany("NavigationRoles")
                        .HasForeignKey("RoleId");

                    b.Navigation("Navigation");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.RoleGroup", b =>
                {
                    b.HasOne("BootstrapAdmin.DataAccess.EFCore.Models.EFGroup", "Group")
                        .WithMany("RoleGroup")
                        .HasForeignKey("GroupId");

                    b.HasOne("BootstrapAdmin.DataAccess.EFCore.Models.EFRole", "Role")
                        .WithMany("RoleGroup")
                        .HasForeignKey("RoleId");

                    b.Navigation("Group");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.UserGroup", b =>
                {
                    b.HasOne("BootstrapAdmin.DataAccess.EFCore.Models.EFGroup", "Group")
                        .WithMany("UserGroup")
                        .HasForeignKey("GroupId");

                    b.HasOne("BootstrapAdmin.DataAccess.EFCore.Models.EFUser", "User")
                        .WithMany("UserGroup")
                        .HasForeignKey("UserId");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.UserRole", b =>
                {
                    b.HasOne("BootstrapAdmin.DataAccess.EFCore.Models.EFRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("BootstrapAdmin.DataAccess.EFCore.Models.EFUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.EFGroup", b =>
                {
                    b.Navigation("RoleGroup");

                    b.Navigation("UserGroup");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.EFNavigation", b =>
                {
                    b.Navigation("NavigationRoles");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.EFRole", b =>
                {
                    b.Navigation("NavigationRoles");

                    b.Navigation("RoleGroup");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("BootstrapAdmin.DataAccess.EFCore.Models.EFUser", b =>
                {
                    b.Navigation("UserGroup");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
